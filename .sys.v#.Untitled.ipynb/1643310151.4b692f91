{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "59487035",
   "metadata": {},
   "outputs": [],
   "source": [
    "import ROOT\n",
    "from ROOT import TMath\n",
    "import time\n",
    "import uproot3\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "476256c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "%jsroot on"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4ca82857",
   "metadata": {},
   "outputs": [],
   "source": [
    "fsig = ROOT.TFile.Open(\"https://atlas-opendata.web.cern.ch/atlas-opendata/samples/2020/2lep/MC/mc_361106.Zee.2lep.root\")\n",
    "fsig = ROOT.TFile.Open(\"https://atlas-opendata.web.cern.ch/atlas-opendata/samples/2020/2lep/MC/mc_361107.Zmumu.2lep.root\")\n",
    "fsig = ROOT.TFile.Open(\"https://atlas-opendata.web.cern.ch/atlas-opendata/samples/2020/2lep/MC/mc_361108.Ztautau.2lep.root\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ce3ae870",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "182180"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tree = fsig.Get(\"mini\")\n",
    "tree.GetEntries()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "36b0eb3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<TFileRecreate b'example.root' at 0x7f677bfd9f10>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "roof = uproot3.recreate(\"example.root\")\n",
    "roof"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "898750e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "roof[\"signal\"] = uproot3.newtree({\"pt\": np.float32})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "71af05f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=[]\n",
    "k=0\n",
    "for event in tree:\n",
    "    k=k+1\n",
    "    if(tree.lep_pt[1]>25000):\n",
    "        roof[\"signal\"].extend({\"pt\": tree.lep_pt})\n",
    "    if k==1000: break\n",
    "roof.close()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
